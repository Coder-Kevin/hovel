责任链模式：
    链上的每个成员都处理自己职责范围内的逻辑，符合单一原则
    解耦请求与处理者，发送者和接收者无需明确的对方信息即可
    增强了可扩展性，只需要链上添加合适的处理类即可

    缺点：
    如果责任链循环调用容易造成环
    责任链的深度会对系统性能产生一定得影响
    无法保证某一环一定被处理，如果长期占用，后续环节无法处理


    典型的应用场景：struts的拦截器链，servlet的filter都是责任链的使用场景